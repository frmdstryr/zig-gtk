// This file is auto generated do not edit
const std = @import("std");
const c = @import("c.zig");

pub const ANALYZER_ANALYZING = c.G_ANALYZER_ANALYZING;
pub const ASCII_DTOSTR_BUF_SIZE = c.G_ASCII_DTOSTR_BUF_SIZE;
pub const BIG_ENDIAN = c.G_BIG_ENDIAN;
pub const CSET_A_2_Z = c.G_CSET_A_2_Z;
pub const CSET_DIGITS = c.G_CSET_DIGITS;
pub const DATALIST_FLAGS_MASK = c.G_DATALIST_FLAGS_MASK;
pub const DATE_BAD_DAY = c.G_DATE_BAD_DAY;
pub const DATE_BAD_JULIAN = c.G_DATE_BAD_JULIAN;
pub const DATE_BAD_YEAR = c.G_DATE_BAD_YEAR;
pub const DIR_SEPARATOR = c.G_DIR_SEPARATOR;
pub const DIR_SEPARATOR_S = c.G_DIR_SEPARATOR_S;
pub const GINT16_FORMAT = c.G_GINT16_FORMAT;
pub const GINT16_MODIFIER = c.G_GINT16_MODIFIER;
pub const GINT32_FORMAT = c.G_GINT32_FORMAT;
pub const GINT32_MODIFIER = c.G_GINT32_MODIFIER;
pub const GINT64_FORMAT = c.G_GINT64_FORMAT;
pub const GINT64_MODIFIER = c.G_GINT64_MODIFIER;
pub const GINTPTR_FORMAT = c.G_GINTPTR_FORMAT;
pub const GINTPTR_MODIFIER = c.G_GINTPTR_MODIFIER;
// pub const GNUC_FUNCTION = c.G_GNUC_FUNCTION;
// pub const GNUC_PRETTY_FUNCTION = c.G_GNUC_PRETTY_FUNCTION;
pub const GSIZE_FORMAT = c.G_GSIZE_FORMAT;
pub const GSIZE_MODIFIER = c.G_GSIZE_MODIFIER;
pub const GSSIZE_FORMAT = c.G_GSSIZE_FORMAT;
pub const GSSIZE_MODIFIER = c.G_GSSIZE_MODIFIER;
pub const GUINT16_FORMAT = c.G_GUINT16_FORMAT;
pub const GUINT32_FORMAT = c.G_GUINT32_FORMAT;
pub const GUINT64_FORMAT = c.G_GUINT64_FORMAT;
pub const GUINTPTR_FORMAT = c.G_GUINTPTR_FORMAT;
pub const HAVE_GINT64 = c.G_HAVE_GINT64;
pub const HAVE_GNUC_VARARGS = c.G_HAVE_GNUC_VARARGS;
pub const HAVE_GNUC_VISIBILITY = c.G_HAVE_GNUC_VISIBILITY;
pub const HAVE_GROWING_STACK = c.G_HAVE_GROWING_STACK;
pub const HAVE_ISO_VARARGS = c.G_HAVE_ISO_VARARGS;
pub const HOOK_FLAG_USER_SHIFT = c.G_HOOK_FLAG_USER_SHIFT;
pub const IEEE754_DOUBLE_BIAS = c.G_IEEE754_DOUBLE_BIAS;
pub const IEEE754_FLOAT_BIAS = c.G_IEEE754_FLOAT_BIAS;
pub const IO_ERR = c.G_IO_ERR;
pub const IO_FLAG_APPEND = c.G_IO_FLAG_APPEND;
pub const IO_FLAG_GET_MASK = c.G_IO_FLAG_GET_MASK;
pub const IO_FLAG_IS_READABLE = c.G_IO_FLAG_IS_READABLE;
pub const IO_FLAG_IS_SEEKABLE = c.G_IO_FLAG_IS_SEEKABLE;
pub const IO_FLAG_IS_WRITEABLE = c.G_IO_FLAG_IS_WRITEABLE;
pub const IO_FLAG_MASK = c.G_IO_FLAG_MASK;
pub const IO_FLAG_NONBLOCK = c.G_IO_FLAG_NONBLOCK;
pub const IO_FLAG_SET_MASK = c.G_IO_FLAG_SET_MASK;
pub const IO_HUP = c.G_IO_HUP;
pub const IO_IN = c.G_IO_IN;
pub const IO_NVAL = c.G_IO_NVAL;
pub const IO_OUT = c.G_IO_OUT;
pub const IO_PRI = c.G_IO_PRI;
pub const IO_STATUS_AGAIN = c.G_IO_STATUS_AGAIN;
pub const IO_STATUS_EOF = c.G_IO_STATUS_EOF;
pub const IO_STATUS_ERROR = c.G_IO_STATUS_ERROR;
pub const IO_STATUS_NORMAL = c.G_IO_STATUS_NORMAL;
pub const KEY_FILE_DESKTOP_GROUP = c.G_KEY_FILE_DESKTOP_GROUP;
pub const KEY_FILE_DESKTOP_KEY_ACTIONS = c.G_KEY_FILE_DESKTOP_KEY_ACTIONS;
pub const KEY_FILE_DESKTOP_KEY_CATEGORIES = c.G_KEY_FILE_DESKTOP_KEY_CATEGORIES;
pub const KEY_FILE_DESKTOP_KEY_COMMENT = c.G_KEY_FILE_DESKTOP_KEY_COMMENT;
pub const KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE = c.G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE;
pub const KEY_FILE_DESKTOP_KEY_EXEC = c.G_KEY_FILE_DESKTOP_KEY_EXEC;
pub const KEY_FILE_DESKTOP_KEY_GENERIC_NAME = c.G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME;
pub const KEY_FILE_DESKTOP_KEY_HIDDEN = c.G_KEY_FILE_DESKTOP_KEY_HIDDEN;
pub const KEY_FILE_DESKTOP_KEY_ICON = c.G_KEY_FILE_DESKTOP_KEY_ICON;
pub const KEY_FILE_DESKTOP_KEY_MIME_TYPE = c.G_KEY_FILE_DESKTOP_KEY_MIME_TYPE;
pub const KEY_FILE_DESKTOP_KEY_NAME = c.G_KEY_FILE_DESKTOP_KEY_NAME;
pub const KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN = c.G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN;
pub const KEY_FILE_DESKTOP_KEY_NO_DISPLAY = c.G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY;
pub const KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN = c.G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN;
pub const KEY_FILE_DESKTOP_KEY_PATH = c.G_KEY_FILE_DESKTOP_KEY_PATH;
pub const KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY = c.G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY;
pub const KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS = c.G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS;
pub const KEY_FILE_DESKTOP_KEY_TERMINAL = c.G_KEY_FILE_DESKTOP_KEY_TERMINAL;
pub const KEY_FILE_DESKTOP_KEY_TRY_EXEC = c.G_KEY_FILE_DESKTOP_KEY_TRY_EXEC;
pub const KEY_FILE_DESKTOP_KEY_TYPE = c.G_KEY_FILE_DESKTOP_KEY_TYPE;
pub const KEY_FILE_DESKTOP_KEY_URL = c.G_KEY_FILE_DESKTOP_KEY_URL;
pub const KEY_FILE_DESKTOP_KEY_VERSION = c.G_KEY_FILE_DESKTOP_KEY_VERSION;
pub const KEY_FILE_DESKTOP_TYPE_APPLICATION = c.G_KEY_FILE_DESKTOP_TYPE_APPLICATION;
pub const KEY_FILE_DESKTOP_TYPE_DIRECTORY = c.G_KEY_FILE_DESKTOP_TYPE_DIRECTORY;
pub const KEY_FILE_DESKTOP_TYPE_LINK = c.G_KEY_FILE_DESKTOP_TYPE_LINK;
pub const LITTLE_ENDIAN = c.G_LITTLE_ENDIAN;
pub const LOG_DOMAIN = c.G_LOG_DOMAIN;
pub const LOG_FATAL_MASK = c.G_LOG_FATAL_MASK;
pub const LOG_LEVEL_USER_SHIFT = c.G_LOG_LEVEL_USER_SHIFT;
pub const MAJOR_VERSION = c.GLIB_MAJOR_VERSION;
pub const MAXINT = c.G_MAXINT;
pub const MAXINT16 = c.G_MAXINT16;
pub const MAXINT32 = c.G_MAXINT32;
pub const MAXINT64 = c.G_MAXINT64;
pub const MAXINT8 = c.G_MAXINT8;
pub const MAXLONG = c.G_MAXLONG;
pub const MAXOFFSET = c.G_MAXOFFSET;
pub const MAXSHORT = c.G_MAXSHORT;
// pub const MAXSIZE = c.G_MAXSIZE;
pub const MAXSSIZE = c.G_MAXSSIZE;
// pub const MAXUINT = c.G_MAXUINT;
pub const MAXUINT16 = c.G_MAXUINT16;
pub const MAXUINT32 = c.G_MAXUINT32;
pub const MAXUINT64 = c.G_MAXUINT64;
pub const MAXUINT8 = c.G_MAXUINT8;
// pub const MAXULONG = c.G_MAXULONG;
pub const MAXUSHORT = c.G_MAXUSHORT;
pub const MICRO_VERSION = c.GLIB_MICRO_VERSION;
pub const MININT = c.G_MININT;
pub const MININT16 = c.G_MININT16;
pub const MININT32 = c.G_MININT32;
pub const MININT64 = c.G_MININT64;
pub const MININT8 = c.G_MININT8;
pub const MINLONG = c.G_MINLONG;
pub const MINOFFSET = c.G_MINOFFSET;
pub const MINOR_VERSION = c.GLIB_MINOR_VERSION;
pub const MINSHORT = c.G_MINSHORT;
pub const MINSSIZE = c.G_MINSSIZE;
pub const MODULE_SUFFIX = c.G_MODULE_SUFFIX;
pub const OPTION_ERROR_BAD_VALUE = c.G_OPTION_ERROR_BAD_VALUE;
pub const OPTION_ERROR_FAILED = c.G_OPTION_ERROR_FAILED;
pub const OPTION_ERROR_UNKNOWN_OPTION = c.G_OPTION_ERROR_UNKNOWN_OPTION;
pub const OPTION_FLAG_FILENAME = c.G_OPTION_FLAG_FILENAME;
pub const OPTION_FLAG_HIDDEN = c.G_OPTION_FLAG_HIDDEN;
pub const OPTION_FLAG_IN_MAIN = c.G_OPTION_FLAG_IN_MAIN;
pub const OPTION_FLAG_NOALIAS = c.G_OPTION_FLAG_NOALIAS;
pub const OPTION_FLAG_NO_ARG = c.G_OPTION_FLAG_NO_ARG;
pub const OPTION_FLAG_OPTIONAL_ARG = c.G_OPTION_FLAG_OPTIONAL_ARG;
pub const OPTION_FLAG_REVERSE = c.G_OPTION_FLAG_REVERSE;
pub const OPTION_REMAINING = c.G_OPTION_REMAINING;
pub const PDP_ENDIAN = c.G_PDP_ENDIAN;
pub const PID_FORMAT = c.G_PID_FORMAT;
pub const POLLFD_FORMAT = c.G_POLLFD_FORMAT;
pub const PRIORITY_DEFAULT = c.G_PRIORITY_DEFAULT;
pub const PRIORITY_DEFAULT_IDLE = c.G_PRIORITY_DEFAULT_IDLE;
pub const PRIORITY_HIGH = c.G_PRIORITY_HIGH;
pub const PRIORITY_HIGH_IDLE = c.G_PRIORITY_HIGH_IDLE;
pub const PRIORITY_LOW = c.G_PRIORITY_LOW;
pub const SEARCHPATH_SEPARATOR = c.G_SEARCHPATH_SEPARATOR;
pub const SEARCHPATH_SEPARATOR_S = c.G_SEARCHPATH_SEPARATOR_S;
pub const SIZEOF_LONG = c.GLIB_SIZEOF_LONG;
pub const SIZEOF_SIZE_T = c.GLIB_SIZEOF_SIZE_T;
pub const SIZEOF_SSIZE_T = c.GLIB_SIZEOF_SSIZE_T;
pub const SIZEOF_VOID_P = c.GLIB_SIZEOF_VOID_P;
pub const SOURCE_CONTINUE = c.G_SOURCE_CONTINUE;
pub const SOURCE_REMOVE = c.G_SOURCE_REMOVE;
pub const SPAWN_CHILD_INHERITS_STDIN = c.G_SPAWN_CHILD_INHERITS_STDIN;
pub const SPAWN_DO_NOT_REAP_CHILD = c.G_SPAWN_DO_NOT_REAP_CHILD;
pub const SPAWN_FILE_AND_ARGV_ZERO = c.G_SPAWN_FILE_AND_ARGV_ZERO;
pub const SPAWN_LEAVE_DESCRIPTORS_OPEN = c.G_SPAWN_LEAVE_DESCRIPTORS_OPEN;
pub const SPAWN_SEARCH_PATH = c.G_SPAWN_SEARCH_PATH;
pub const SPAWN_STDERR_TO_DEV_NULL = c.G_SPAWN_STDERR_TO_DEV_NULL;
pub const SPAWN_STDOUT_TO_DEV_NULL = c.G_SPAWN_STDOUT_TO_DEV_NULL;
pub const STR_DELIMITERS = c.G_STR_DELIMITERS;
pub const SYSDEF_AF_INET = c.GLIB_SYSDEF_AF_INET;
pub const SYSDEF_AF_INET6 = c.GLIB_SYSDEF_AF_INET6;
pub const SYSDEF_AF_UNIX = c.GLIB_SYSDEF_AF_UNIX;
pub const SYSDEF_MSG_DONTROUTE = c.GLIB_SYSDEF_MSG_DONTROUTE;
pub const SYSDEF_MSG_OOB = c.GLIB_SYSDEF_MSG_OOB;
pub const SYSDEF_MSG_PEEK = c.GLIB_SYSDEF_MSG_PEEK;
pub const TEST_OPTION_ISOLATE_DIRS = c.G_TEST_OPTION_ISOLATE_DIRS;
pub const TIME_SPAN_DAY = c.G_TIME_SPAN_DAY;
pub const TIME_SPAN_HOUR = c.G_TIME_SPAN_HOUR;
pub const TIME_SPAN_MILLISECOND = c.G_TIME_SPAN_MILLISECOND;
pub const TIME_SPAN_MINUTE = c.G_TIME_SPAN_MINUTE;
pub const TIME_SPAN_SECOND = c.G_TIME_SPAN_SECOND;
pub const UNICHAR_MAX_DECOMPOSITION_LENGTH = c.G_UNICHAR_MAX_DECOMPOSITION_LENGTH;
pub const URI_RESERVED_CHARS_GENERIC_DELIMITERS = c.G_URI_RESERVED_CHARS_GENERIC_DELIMITERS;
pub const URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS = c.G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS;
pub const USEC_PER_SEC = c.G_USEC_PER_SEC;
pub const USER_DIRECTORY_DESKTOP = c.G_USER_DIRECTORY_DESKTOP;
pub const USER_DIRECTORY_DOCUMENTS = c.G_USER_DIRECTORY_DOCUMENTS;
pub const USER_DIRECTORY_DOWNLOAD = c.G_USER_DIRECTORY_DOWNLOAD;
pub const USER_DIRECTORY_MUSIC = c.G_USER_DIRECTORY_MUSIC;
pub const USER_DIRECTORY_PICTURES = c.G_USER_DIRECTORY_PICTURES;
pub const USER_DIRECTORY_PUBLIC_SHARE = c.G_USER_DIRECTORY_PUBLIC_SHARE;
pub const USER_DIRECTORY_TEMPLATES = c.G_USER_DIRECTORY_TEMPLATES;
pub const USER_DIRECTORY_VIDEOS = c.G_USER_DIRECTORY_VIDEOS;
pub const VA_COPY_AS_ARRAY = c.G_VA_COPY_AS_ARRAY;
pub const VERSION_MIN_REQUIRED = c.GLIB_VERSION_MIN_REQUIRED;
// pub const WIN32_MSG_HANDLE = c.G_WIN32_MSG_HANDLE;

test {
    std.testing.refAllDecls(@This());
}