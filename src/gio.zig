// This file is auto generated do not edit
const std = @import("std");
pub usingnamespace @import("gio/enums.zig");
pub usingnamespace @import("gio/flags.zig");

pub const Action = @import("gio/action.zig").Action;
pub const ActionEntry = @import("gio/action_entry.zig").ActionEntry;
pub const ActionGroup = @import("gio/action_group.zig").ActionGroup;
pub const ActionGroupInterface = @import("gio/action_group_interface.zig").ActionGroupInterface;
pub const ActionInterface = @import("gio/action_interface.zig").ActionInterface;
pub const ActionMap = @import("gio/action_map.zig").ActionMap;
pub const ActionMapInterface = @import("gio/action_map_interface.zig").ActionMapInterface;
pub const AppInfo = @import("gio/app_info.zig").AppInfo;
pub const AppInfoIface = @import("gio/app_info_iface.zig").AppInfoIface;
pub const AppInfoMonitor = @import("gio/app_info_monitor.zig").AppInfoMonitor;
pub const AppLaunchContext = @import("gio/app_launch_context.zig").AppLaunchContext;
pub const AppLaunchContextClass = @import("gio/app_launch_context_class.zig").AppLaunchContextClass;
pub const AppLaunchContextPrivate = @import("gio/app_launch_context_private.zig").AppLaunchContextPrivate;
pub const Application = @import("gio/application.zig").Application;
pub const ApplicationClass = @import("gio/application_class.zig").ApplicationClass;
pub const ApplicationCommandLine = @import("gio/application_command_line.zig").ApplicationCommandLine;
pub const ApplicationCommandLineClass = @import("gio/application_command_line_class.zig").ApplicationCommandLineClass;
pub const ApplicationCommandLinePrivate = @import("gio/application_command_line_private.zig").ApplicationCommandLinePrivate;
pub const ApplicationPrivate = @import("gio/application_private.zig").ApplicationPrivate;
pub const AsyncInitable = @import("gio/async_initable.zig").AsyncInitable;
pub const AsyncInitableIface = @import("gio/async_initable_iface.zig").AsyncInitableIface;
pub const AsyncResult = @import("gio/async_result.zig").AsyncResult;
pub const AsyncResultIface = @import("gio/async_result_iface.zig").AsyncResultIface;
pub const BufferedInputStream = @import("gio/buffered_input_stream.zig").BufferedInputStream;
pub const BufferedInputStreamClass = @import("gio/buffered_input_stream_class.zig").BufferedInputStreamClass;
pub const BufferedInputStreamPrivate = @import("gio/buffered_input_stream_private.zig").BufferedInputStreamPrivate;
pub const BufferedOutputStream = @import("gio/buffered_output_stream.zig").BufferedOutputStream;
pub const BufferedOutputStreamClass = @import("gio/buffered_output_stream_class.zig").BufferedOutputStreamClass;
pub const BufferedOutputStreamPrivate = @import("gio/buffered_output_stream_private.zig").BufferedOutputStreamPrivate;
pub const BytesIcon = @import("gio/bytes_icon.zig").BytesIcon;
pub const Cancellable = @import("gio/cancellable.zig").Cancellable;
pub const CancellableClass = @import("gio/cancellable_class.zig").CancellableClass;
pub const CancellablePrivate = @import("gio/cancellable_private.zig").CancellablePrivate;
pub const CharsetConverter = @import("gio/charset_converter.zig").CharsetConverter;
pub const CharsetConverterClass = @import("gio/charset_converter_class.zig").CharsetConverterClass;
pub const Converter = @import("gio/converter.zig").Converter;
pub const ConverterIface = @import("gio/converter_iface.zig").ConverterIface;
pub const ConverterInputStream = @import("gio/converter_input_stream.zig").ConverterInputStream;
pub const ConverterInputStreamClass = @import("gio/converter_input_stream_class.zig").ConverterInputStreamClass;
pub const ConverterInputStreamPrivate = @import("gio/converter_input_stream_private.zig").ConverterInputStreamPrivate;
pub const ConverterOutputStream = @import("gio/converter_output_stream.zig").ConverterOutputStream;
pub const ConverterOutputStreamClass = @import("gio/converter_output_stream_class.zig").ConverterOutputStreamClass;
pub const ConverterOutputStreamPrivate = @import("gio/converter_output_stream_private.zig").ConverterOutputStreamPrivate;
pub const Credentials = @import("gio/credentials.zig").Credentials;
pub const CredentialsClass = @import("gio/credentials_class.zig").CredentialsClass;
pub const DBusActionGroup = @import("gio/d_bus_action_group.zig").DBusActionGroup;
pub const DBusAnnotationInfo = @import("gio/d_bus_annotation_info.zig").DBusAnnotationInfo;
pub const DBusArgInfo = @import("gio/d_bus_arg_info.zig").DBusArgInfo;
pub const DBusAuthObserver = @import("gio/d_bus_auth_observer.zig").DBusAuthObserver;
pub const DBusConnection = @import("gio/d_bus_connection.zig").DBusConnection;
pub const DBusErrorEntry = @import("gio/d_bus_error_entry.zig").DBusErrorEntry;
pub const DBusInterface = @import("gio/d_bus_interface.zig").DBusInterface;
pub const DBusInterfaceIface = @import("gio/d_bus_interface_iface.zig").DBusInterfaceIface;
pub const DBusInterfaceInfo = @import("gio/d_bus_interface_info.zig").DBusInterfaceInfo;
pub const DBusInterfaceSkeleton = @import("gio/d_bus_interface_skeleton.zig").DBusInterfaceSkeleton;
pub const DBusInterfaceSkeletonClass = @import("gio/d_bus_interface_skeleton_class.zig").DBusInterfaceSkeletonClass;
pub const DBusInterfaceSkeletonPrivate = @import("gio/d_bus_interface_skeleton_private.zig").DBusInterfaceSkeletonPrivate;
pub const DBusInterfaceVTable = @import("gio/d_bus_interface_v_table.zig").DBusInterfaceVTable;
pub const DBusMenuModel = @import("gio/d_bus_menu_model.zig").DBusMenuModel;
pub const DBusMessage = @import("gio/d_bus_message.zig").DBusMessage;
pub const DBusMethodInfo = @import("gio/d_bus_method_info.zig").DBusMethodInfo;
pub const DBusMethodInvocation = @import("gio/d_bus_method_invocation.zig").DBusMethodInvocation;
pub const DBusNodeInfo = @import("gio/d_bus_node_info.zig").DBusNodeInfo;
pub const DBusObject = @import("gio/d_bus_object.zig").DBusObject;
pub const DBusObjectIface = @import("gio/d_bus_object_iface.zig").DBusObjectIface;
pub const DBusObjectManager = @import("gio/d_bus_object_manager.zig").DBusObjectManager;
pub const DBusObjectManagerClient = @import("gio/d_bus_object_manager_client.zig").DBusObjectManagerClient;
pub const DBusObjectManagerClientClass = @import("gio/d_bus_object_manager_client_class.zig").DBusObjectManagerClientClass;
pub const DBusObjectManagerClientPrivate = @import("gio/d_bus_object_manager_client_private.zig").DBusObjectManagerClientPrivate;
pub const DBusObjectManagerIface = @import("gio/d_bus_object_manager_iface.zig").DBusObjectManagerIface;
pub const DBusObjectManagerServer = @import("gio/d_bus_object_manager_server.zig").DBusObjectManagerServer;
pub const DBusObjectManagerServerClass = @import("gio/d_bus_object_manager_server_class.zig").DBusObjectManagerServerClass;
pub const DBusObjectManagerServerPrivate = @import("gio/d_bus_object_manager_server_private.zig").DBusObjectManagerServerPrivate;
pub const DBusObjectProxy = @import("gio/d_bus_object_proxy.zig").DBusObjectProxy;
pub const DBusObjectProxyClass = @import("gio/d_bus_object_proxy_class.zig").DBusObjectProxyClass;
pub const DBusObjectProxyPrivate = @import("gio/d_bus_object_proxy_private.zig").DBusObjectProxyPrivate;
pub const DBusObjectSkeleton = @import("gio/d_bus_object_skeleton.zig").DBusObjectSkeleton;
pub const DBusObjectSkeletonClass = @import("gio/d_bus_object_skeleton_class.zig").DBusObjectSkeletonClass;
pub const DBusObjectSkeletonPrivate = @import("gio/d_bus_object_skeleton_private.zig").DBusObjectSkeletonPrivate;
pub const DBusPropertyInfo = @import("gio/d_bus_property_info.zig").DBusPropertyInfo;
pub const DBusProxy = @import("gio/d_bus_proxy.zig").DBusProxy;
pub const DBusProxyClass = @import("gio/d_bus_proxy_class.zig").DBusProxyClass;
pub const DBusProxyPrivate = @import("gio/d_bus_proxy_private.zig").DBusProxyPrivate;
pub const DBusServer = @import("gio/d_bus_server.zig").DBusServer;
pub const DBusSignalInfo = @import("gio/d_bus_signal_info.zig").DBusSignalInfo;
pub const DBusSubtreeVTable = @import("gio/d_bus_subtree_v_table.zig").DBusSubtreeVTable;
pub const DataInputStream = @import("gio/data_input_stream.zig").DataInputStream;
pub const DataInputStreamClass = @import("gio/data_input_stream_class.zig").DataInputStreamClass;
pub const DataInputStreamPrivate = @import("gio/data_input_stream_private.zig").DataInputStreamPrivate;
pub const DataOutputStream = @import("gio/data_output_stream.zig").DataOutputStream;
pub const DataOutputStreamClass = @import("gio/data_output_stream_class.zig").DataOutputStreamClass;
pub const DataOutputStreamPrivate = @import("gio/data_output_stream_private.zig").DataOutputStreamPrivate;
pub const DatagramBased = @import("gio/datagram_based.zig").DatagramBased;
pub const DatagramBasedInterface = @import("gio/datagram_based_interface.zig").DatagramBasedInterface;
pub const DebugController = @import("gio/debug_controller.zig").DebugController;
pub const DebugControllerDBus = @import("gio/debug_controller_d_bus.zig").DebugControllerDBus;
pub const DebugControllerDBusClass = @import("gio/debug_controller_d_bus_class.zig").DebugControllerDBusClass;
pub const DebugControllerInterface = @import("gio/debug_controller_interface.zig").DebugControllerInterface;
pub const DesktopAppInfo = @import("gio/desktop_app_info.zig").DesktopAppInfo;
pub const DesktopAppInfoClass = @import("gio/desktop_app_info_class.zig").DesktopAppInfoClass;
pub const DesktopAppInfoLookup = @import("gio/desktop_app_info_lookup.zig").DesktopAppInfoLookup;
pub const DesktopAppInfoLookupIface = @import("gio/desktop_app_info_lookup_iface.zig").DesktopAppInfoLookupIface;
pub const Drive = @import("gio/drive.zig").Drive;
pub const DriveIface = @import("gio/drive_iface.zig").DriveIface;
pub const DtlsClientConnection = @import("gio/dtls_client_connection.zig").DtlsClientConnection;
pub const DtlsClientConnectionInterface = @import("gio/dtls_client_connection_interface.zig").DtlsClientConnectionInterface;
pub const DtlsConnection = @import("gio/dtls_connection.zig").DtlsConnection;
pub const DtlsConnectionInterface = @import("gio/dtls_connection_interface.zig").DtlsConnectionInterface;
pub const DtlsServerConnection = @import("gio/dtls_server_connection.zig").DtlsServerConnection;
pub const DtlsServerConnectionInterface = @import("gio/dtls_server_connection_interface.zig").DtlsServerConnectionInterface;
pub const Emblem = @import("gio/emblem.zig").Emblem;
pub const EmblemClass = @import("gio/emblem_class.zig").EmblemClass;
pub const EmblemedIcon = @import("gio/emblemed_icon.zig").EmblemedIcon;
pub const EmblemedIconClass = @import("gio/emblemed_icon_class.zig").EmblemedIconClass;
pub const EmblemedIconPrivate = @import("gio/emblemed_icon_private.zig").EmblemedIconPrivate;
pub const File = @import("gio/file.zig").File;
pub const FileAttributeInfo = @import("gio/file_attribute_info.zig").FileAttributeInfo;
pub const FileAttributeInfoList = @import("gio/file_attribute_info_list.zig").FileAttributeInfoList;
pub const FileAttributeMatcher = @import("gio/file_attribute_matcher.zig").FileAttributeMatcher;
pub const FileDescriptorBased = @import("gio/file_descriptor_based.zig").FileDescriptorBased;
pub const FileDescriptorBasedIface = @import("gio/file_descriptor_based_iface.zig").FileDescriptorBasedIface;
pub const FileEnumerator = @import("gio/file_enumerator.zig").FileEnumerator;
pub const FileEnumeratorClass = @import("gio/file_enumerator_class.zig").FileEnumeratorClass;
pub const FileEnumeratorPrivate = @import("gio/file_enumerator_private.zig").FileEnumeratorPrivate;
pub const FileIOStream = @import("gio/file_io_stream.zig").FileIOStream;
pub const FileIOStreamClass = @import("gio/file_io_stream_class.zig").FileIOStreamClass;
pub const FileIOStreamPrivate = @import("gio/file_io_stream_private.zig").FileIOStreamPrivate;
pub const FileIcon = @import("gio/file_icon.zig").FileIcon;
pub const FileIconClass = @import("gio/file_icon_class.zig").FileIconClass;
pub const FileIface = @import("gio/file_iface.zig").FileIface;
pub const FileInfo = @import("gio/file_info.zig").FileInfo;
pub const FileInfoClass = @import("gio/file_info_class.zig").FileInfoClass;
pub const FileInputStream = @import("gio/file_input_stream.zig").FileInputStream;
pub const FileInputStreamClass = @import("gio/file_input_stream_class.zig").FileInputStreamClass;
pub const FileInputStreamPrivate = @import("gio/file_input_stream_private.zig").FileInputStreamPrivate;
pub const FileMonitor = @import("gio/file_monitor.zig").FileMonitor;
pub const FileMonitorClass = @import("gio/file_monitor_class.zig").FileMonitorClass;
pub const FileMonitorPrivate = @import("gio/file_monitor_private.zig").FileMonitorPrivate;
pub const FileOutputStream = @import("gio/file_output_stream.zig").FileOutputStream;
pub const FileOutputStreamClass = @import("gio/file_output_stream_class.zig").FileOutputStreamClass;
pub const FileOutputStreamPrivate = @import("gio/file_output_stream_private.zig").FileOutputStreamPrivate;
pub const FilenameCompleter = @import("gio/filename_completer.zig").FilenameCompleter;
pub const FilenameCompleterClass = @import("gio/filename_completer_class.zig").FilenameCompleterClass;
pub const FilterInputStream = @import("gio/filter_input_stream.zig").FilterInputStream;
pub const FilterInputStreamClass = @import("gio/filter_input_stream_class.zig").FilterInputStreamClass;
pub const FilterOutputStream = @import("gio/filter_output_stream.zig").FilterOutputStream;
pub const FilterOutputStreamClass = @import("gio/filter_output_stream_class.zig").FilterOutputStreamClass;
pub const IOExtension = @import("gio/io_extension.zig").IOExtension;
pub const IOExtensionPoint = @import("gio/io_extension_point.zig").IOExtensionPoint;
pub const IOModule = @import("gio/io_module.zig").IOModule;
pub const IOModuleClass = @import("gio/io_module_class.zig").IOModuleClass;
pub const IOModuleScope = @import("gio/io_module_scope.zig").IOModuleScope;
pub const IOSchedulerJob = @import("gio/io_scheduler_job.zig").IOSchedulerJob;
pub const IOStream = @import("gio/io_stream.zig").IOStream;
pub const IOStreamAdapter = @import("gio/io_stream_adapter.zig").IOStreamAdapter;
pub const IOStreamClass = @import("gio/io_stream_class.zig").IOStreamClass;
pub const IOStreamPrivate = @import("gio/io_stream_private.zig").IOStreamPrivate;
pub const Icon = @import("gio/icon.zig").Icon;
pub const IconIface = @import("gio/icon_iface.zig").IconIface;
pub const InetAddress = @import("gio/inet_address.zig").InetAddress;
pub const InetAddressClass = @import("gio/inet_address_class.zig").InetAddressClass;
pub const InetAddressMask = @import("gio/inet_address_mask.zig").InetAddressMask;
pub const InetAddressMaskClass = @import("gio/inet_address_mask_class.zig").InetAddressMaskClass;
pub const InetAddressMaskPrivate = @import("gio/inet_address_mask_private.zig").InetAddressMaskPrivate;
pub const InetAddressPrivate = @import("gio/inet_address_private.zig").InetAddressPrivate;
pub const InetSocketAddress = @import("gio/inet_socket_address.zig").InetSocketAddress;
pub const InetSocketAddressClass = @import("gio/inet_socket_address_class.zig").InetSocketAddressClass;
pub const InetSocketAddressPrivate = @import("gio/inet_socket_address_private.zig").InetSocketAddressPrivate;
pub const Initable = @import("gio/initable.zig").Initable;
pub const InitableIface = @import("gio/initable_iface.zig").InitableIface;
pub const InputMessage = @import("gio/input_message.zig").InputMessage;
pub const InputStream = @import("gio/input_stream.zig").InputStream;
pub const InputStreamClass = @import("gio/input_stream_class.zig").InputStreamClass;
pub const InputStreamPrivate = @import("gio/input_stream_private.zig").InputStreamPrivate;
pub const InputVector = @import("gio/input_vector.zig").InputVector;
pub const ListModel = @import("gio/list_model.zig").ListModel;
pub const ListModelInterface = @import("gio/list_model_interface.zig").ListModelInterface;
pub const ListStore = @import("gio/list_store.zig").ListStore;
pub const ListStoreClass = @import("gio/list_store_class.zig").ListStoreClass;
pub const LoadableIcon = @import("gio/loadable_icon.zig").LoadableIcon;
pub const LoadableIconIface = @import("gio/loadable_icon_iface.zig").LoadableIconIface;
pub const MemoryInputStream = @import("gio/memory_input_stream.zig").MemoryInputStream;
pub const MemoryInputStreamClass = @import("gio/memory_input_stream_class.zig").MemoryInputStreamClass;
pub const MemoryInputStreamPrivate = @import("gio/memory_input_stream_private.zig").MemoryInputStreamPrivate;
pub const MemoryMonitor = @import("gio/memory_monitor.zig").MemoryMonitor;
pub const MemoryMonitorInterface = @import("gio/memory_monitor_interface.zig").MemoryMonitorInterface;
pub const MemoryOutputStream = @import("gio/memory_output_stream.zig").MemoryOutputStream;
pub const MemoryOutputStreamClass = @import("gio/memory_output_stream_class.zig").MemoryOutputStreamClass;
pub const MemoryOutputStreamPrivate = @import("gio/memory_output_stream_private.zig").MemoryOutputStreamPrivate;
pub const Menu = @import("gio/menu.zig").Menu;
pub const MenuAttributeIter = @import("gio/menu_attribute_iter.zig").MenuAttributeIter;
pub const MenuAttributeIterClass = @import("gio/menu_attribute_iter_class.zig").MenuAttributeIterClass;
pub const MenuAttributeIterPrivate = @import("gio/menu_attribute_iter_private.zig").MenuAttributeIterPrivate;
pub const MenuItem = @import("gio/menu_item.zig").MenuItem;
pub const MenuLinkIter = @import("gio/menu_link_iter.zig").MenuLinkIter;
pub const MenuLinkIterClass = @import("gio/menu_link_iter_class.zig").MenuLinkIterClass;
pub const MenuLinkIterPrivate = @import("gio/menu_link_iter_private.zig").MenuLinkIterPrivate;
pub const MenuModel = @import("gio/menu_model.zig").MenuModel;
pub const MenuModelClass = @import("gio/menu_model_class.zig").MenuModelClass;
pub const MenuModelPrivate = @import("gio/menu_model_private.zig").MenuModelPrivate;
pub const Mount = @import("gio/mount.zig").Mount;
pub const MountIface = @import("gio/mount_iface.zig").MountIface;
pub const MountOperation = @import("gio/mount_operation.zig").MountOperation;
pub const MountOperationClass = @import("gio/mount_operation_class.zig").MountOperationClass;
pub const MountOperationPrivate = @import("gio/mount_operation_private.zig").MountOperationPrivate;
pub const NativeSocketAddress = @import("gio/native_socket_address.zig").NativeSocketAddress;
pub const NativeSocketAddressClass = @import("gio/native_socket_address_class.zig").NativeSocketAddressClass;
pub const NativeSocketAddressPrivate = @import("gio/native_socket_address_private.zig").NativeSocketAddressPrivate;
pub const NativeVolumeMonitor = @import("gio/native_volume_monitor.zig").NativeVolumeMonitor;
pub const NativeVolumeMonitorClass = @import("gio/native_volume_monitor_class.zig").NativeVolumeMonitorClass;
pub const NetworkAddress = @import("gio/network_address.zig").NetworkAddress;
pub const NetworkAddressClass = @import("gio/network_address_class.zig").NetworkAddressClass;
pub const NetworkAddressPrivate = @import("gio/network_address_private.zig").NetworkAddressPrivate;
pub const NetworkMonitor = @import("gio/network_monitor.zig").NetworkMonitor;
pub const NetworkMonitorInterface = @import("gio/network_monitor_interface.zig").NetworkMonitorInterface;
pub const NetworkService = @import("gio/network_service.zig").NetworkService;
pub const NetworkServiceClass = @import("gio/network_service_class.zig").NetworkServiceClass;
pub const NetworkServicePrivate = @import("gio/network_service_private.zig").NetworkServicePrivate;
pub const Notification = @import("gio/notification.zig").Notification;
pub const OutputMessage = @import("gio/output_message.zig").OutputMessage;
pub const OutputStream = @import("gio/output_stream.zig").OutputStream;
pub const OutputStreamClass = @import("gio/output_stream_class.zig").OutputStreamClass;
pub const OutputStreamPrivate = @import("gio/output_stream_private.zig").OutputStreamPrivate;
pub const OutputVector = @import("gio/output_vector.zig").OutputVector;
pub const Permission = @import("gio/permission.zig").Permission;
pub const PermissionClass = @import("gio/permission_class.zig").PermissionClass;
pub const PermissionPrivate = @import("gio/permission_private.zig").PermissionPrivate;
pub const PollableInputStream = @import("gio/pollable_input_stream.zig").PollableInputStream;
pub const PollableInputStreamInterface = @import("gio/pollable_input_stream_interface.zig").PollableInputStreamInterface;
pub const PollableOutputStream = @import("gio/pollable_output_stream.zig").PollableOutputStream;
pub const PollableOutputStreamInterface = @import("gio/pollable_output_stream_interface.zig").PollableOutputStreamInterface;
pub const PowerProfileMonitor = @import("gio/power_profile_monitor.zig").PowerProfileMonitor;
pub const PowerProfileMonitorInterface = @import("gio/power_profile_monitor_interface.zig").PowerProfileMonitorInterface;
pub const PropertyAction = @import("gio/property_action.zig").PropertyAction;
pub const Proxy = @import("gio/proxy.zig").Proxy;
pub const ProxyAddress = @import("gio/proxy_address.zig").ProxyAddress;
pub const ProxyAddressClass = @import("gio/proxy_address_class.zig").ProxyAddressClass;
pub const ProxyAddressEnumerator = @import("gio/proxy_address_enumerator.zig").ProxyAddressEnumerator;
pub const ProxyAddressEnumeratorClass = @import("gio/proxy_address_enumerator_class.zig").ProxyAddressEnumeratorClass;
pub const ProxyAddressEnumeratorPrivate = @import("gio/proxy_address_enumerator_private.zig").ProxyAddressEnumeratorPrivate;
pub const ProxyAddressPrivate = @import("gio/proxy_address_private.zig").ProxyAddressPrivate;
pub const ProxyInterface = @import("gio/proxy_interface.zig").ProxyInterface;
pub const ProxyResolver = @import("gio/proxy_resolver.zig").ProxyResolver;
pub const ProxyResolverInterface = @import("gio/proxy_resolver_interface.zig").ProxyResolverInterface;
pub const RemoteActionGroup = @import("gio/remote_action_group.zig").RemoteActionGroup;
pub const RemoteActionGroupInterface = @import("gio/remote_action_group_interface.zig").RemoteActionGroupInterface;
pub const Resolver = @import("gio/resolver.zig").Resolver;
pub const ResolverClass = @import("gio/resolver_class.zig").ResolverClass;
pub const ResolverPrivate = @import("gio/resolver_private.zig").ResolverPrivate;
pub const Resource = @import("gio/resource.zig").Resource;
pub const Seekable = @import("gio/seekable.zig").Seekable;
pub const SeekableIface = @import("gio/seekable_iface.zig").SeekableIface;
pub const Settings = @import("gio/settings.zig").Settings;
pub const SettingsBackend = @import("gio/settings_backend.zig").SettingsBackend;
pub const SettingsBackendClass = @import("gio/settings_backend_class.zig").SettingsBackendClass;
pub const SettingsBackendPrivate = @import("gio/settings_backend_private.zig").SettingsBackendPrivate;
pub const SettingsClass = @import("gio/settings_class.zig").SettingsClass;
pub const SettingsPrivate = @import("gio/settings_private.zig").SettingsPrivate;
pub const SettingsSchema = @import("gio/settings_schema.zig").SettingsSchema;
pub const SettingsSchemaKey = @import("gio/settings_schema_key.zig").SettingsSchemaKey;
pub const SettingsSchemaSource = @import("gio/settings_schema_source.zig").SettingsSchemaSource;
pub const SimpleAction = @import("gio/simple_action.zig").SimpleAction;
pub const SimpleActionGroup = @import("gio/simple_action_group.zig").SimpleActionGroup;
pub const SimpleActionGroupClass = @import("gio/simple_action_group_class.zig").SimpleActionGroupClass;
pub const SimpleActionGroupPrivate = @import("gio/simple_action_group_private.zig").SimpleActionGroupPrivate;
pub const SimpleAsyncResult = @import("gio/simple_async_result.zig").SimpleAsyncResult;
pub const SimpleAsyncResultClass = @import("gio/simple_async_result_class.zig").SimpleAsyncResultClass;
pub const SimpleIOStream = @import("gio/simple_io_stream.zig").SimpleIOStream;
pub const SimplePermission = @import("gio/simple_permission.zig").SimplePermission;
pub const SimpleProxyResolver = @import("gio/simple_proxy_resolver.zig").SimpleProxyResolver;
pub const SimpleProxyResolverClass = @import("gio/simple_proxy_resolver_class.zig").SimpleProxyResolverClass;
pub const SimpleProxyResolverPrivate = @import("gio/simple_proxy_resolver_private.zig").SimpleProxyResolverPrivate;
pub const Socket = @import("gio/socket.zig").Socket;
pub const SocketAddress = @import("gio/socket_address.zig").SocketAddress;
pub const SocketAddressClass = @import("gio/socket_address_class.zig").SocketAddressClass;
pub const SocketAddressEnumerator = @import("gio/socket_address_enumerator.zig").SocketAddressEnumerator;
pub const SocketAddressEnumeratorClass = @import("gio/socket_address_enumerator_class.zig").SocketAddressEnumeratorClass;
pub const SocketClass = @import("gio/socket_class.zig").SocketClass;
pub const SocketClient = @import("gio/socket_client.zig").SocketClient;
pub const SocketClientClass = @import("gio/socket_client_class.zig").SocketClientClass;
pub const SocketClientPrivate = @import("gio/socket_client_private.zig").SocketClientPrivate;
pub const SocketConnectable = @import("gio/socket_connectable.zig").SocketConnectable;
pub const SocketConnectableIface = @import("gio/socket_connectable_iface.zig").SocketConnectableIface;
pub const SocketConnection = @import("gio/socket_connection.zig").SocketConnection;
pub const SocketConnectionClass = @import("gio/socket_connection_class.zig").SocketConnectionClass;
pub const SocketConnectionPrivate = @import("gio/socket_connection_private.zig").SocketConnectionPrivate;
pub const SocketControlMessage = @import("gio/socket_control_message.zig").SocketControlMessage;
pub const SocketControlMessageClass = @import("gio/socket_control_message_class.zig").SocketControlMessageClass;
pub const SocketControlMessagePrivate = @import("gio/socket_control_message_private.zig").SocketControlMessagePrivate;
pub const SocketListener = @import("gio/socket_listener.zig").SocketListener;
pub const SocketListenerClass = @import("gio/socket_listener_class.zig").SocketListenerClass;
pub const SocketListenerPrivate = @import("gio/socket_listener_private.zig").SocketListenerPrivate;
pub const SocketPrivate = @import("gio/socket_private.zig").SocketPrivate;
pub const SocketService = @import("gio/socket_service.zig").SocketService;
pub const SocketServiceClass = @import("gio/socket_service_class.zig").SocketServiceClass;
pub const SocketServicePrivate = @import("gio/socket_service_private.zig").SocketServicePrivate;
pub const SrvTarget = @import("gio/srv_target.zig").SrvTarget;
pub const StaticResource = @import("gio/static_resource.zig").StaticResource;
pub const Subprocess = @import("gio/subprocess.zig").Subprocess;
pub const SubprocessLauncher = @import("gio/subprocess_launcher.zig").SubprocessLauncher;
pub const Task = @import("gio/task.zig").Task;
pub const TaskClass = @import("gio/task_class.zig").TaskClass;
pub const TcpConnection = @import("gio/tcp_connection.zig").TcpConnection;
pub const TcpConnectionClass = @import("gio/tcp_connection_class.zig").TcpConnectionClass;
pub const TcpConnectionPrivate = @import("gio/tcp_connection_private.zig").TcpConnectionPrivate;
pub const TcpWrapperConnection = @import("gio/tcp_wrapper_connection.zig").TcpWrapperConnection;
pub const TcpWrapperConnectionClass = @import("gio/tcp_wrapper_connection_class.zig").TcpWrapperConnectionClass;
pub const TcpWrapperConnectionPrivate = @import("gio/tcp_wrapper_connection_private.zig").TcpWrapperConnectionPrivate;
pub const TestDBus = @import("gio/test_d_bus.zig").TestDBus;
pub const ThemedIcon = @import("gio/themed_icon.zig").ThemedIcon;
pub const ThemedIconClass = @import("gio/themed_icon_class.zig").ThemedIconClass;
pub const ThreadedSocketService = @import("gio/threaded_socket_service.zig").ThreadedSocketService;
pub const ThreadedSocketServiceClass = @import("gio/threaded_socket_service_class.zig").ThreadedSocketServiceClass;
pub const ThreadedSocketServicePrivate = @import("gio/threaded_socket_service_private.zig").ThreadedSocketServicePrivate;
pub const TlsBackend = @import("gio/tls_backend.zig").TlsBackend;
pub const TlsBackendInterface = @import("gio/tls_backend_interface.zig").TlsBackendInterface;
pub const TlsCertificate = @import("gio/tls_certificate.zig").TlsCertificate;
pub const TlsCertificateClass = @import("gio/tls_certificate_class.zig").TlsCertificateClass;
pub const TlsCertificatePrivate = @import("gio/tls_certificate_private.zig").TlsCertificatePrivate;
pub const TlsClientConnection = @import("gio/tls_client_connection.zig").TlsClientConnection;
pub const TlsClientConnectionInterface = @import("gio/tls_client_connection_interface.zig").TlsClientConnectionInterface;
pub const TlsConnection = @import("gio/tls_connection.zig").TlsConnection;
pub const TlsConnectionClass = @import("gio/tls_connection_class.zig").TlsConnectionClass;
pub const TlsConnectionPrivate = @import("gio/tls_connection_private.zig").TlsConnectionPrivate;
pub const TlsDatabase = @import("gio/tls_database.zig").TlsDatabase;
pub const TlsDatabaseClass = @import("gio/tls_database_class.zig").TlsDatabaseClass;
pub const TlsDatabasePrivate = @import("gio/tls_database_private.zig").TlsDatabasePrivate;
pub const TlsFileDatabase = @import("gio/tls_file_database.zig").TlsFileDatabase;
pub const TlsFileDatabaseInterface = @import("gio/tls_file_database_interface.zig").TlsFileDatabaseInterface;
pub const TlsInteraction = @import("gio/tls_interaction.zig").TlsInteraction;
pub const TlsInteractionClass = @import("gio/tls_interaction_class.zig").TlsInteractionClass;
pub const TlsInteractionPrivate = @import("gio/tls_interaction_private.zig").TlsInteractionPrivate;
pub const TlsPassword = @import("gio/tls_password.zig").TlsPassword;
pub const TlsPasswordClass = @import("gio/tls_password_class.zig").TlsPasswordClass;
pub const TlsPasswordPrivate = @import("gio/tls_password_private.zig").TlsPasswordPrivate;
pub const TlsServerConnection = @import("gio/tls_server_connection.zig").TlsServerConnection;
pub const TlsServerConnectionInterface = @import("gio/tls_server_connection_interface.zig").TlsServerConnectionInterface;
pub const UnixConnection = @import("gio/unix_connection.zig").UnixConnection;
pub const UnixConnectionClass = @import("gio/unix_connection_class.zig").UnixConnectionClass;
pub const UnixConnectionPrivate = @import("gio/unix_connection_private.zig").UnixConnectionPrivate;
pub const UnixCredentialsMessage = @import("gio/unix_credentials_message.zig").UnixCredentialsMessage;
pub const UnixCredentialsMessageClass = @import("gio/unix_credentials_message_class.zig").UnixCredentialsMessageClass;
pub const UnixCredentialsMessagePrivate = @import("gio/unix_credentials_message_private.zig").UnixCredentialsMessagePrivate;
pub const UnixFDList = @import("gio/unix_fd_list.zig").UnixFDList;
pub const UnixFDListClass = @import("gio/unix_fd_list_class.zig").UnixFDListClass;
pub const UnixFDListPrivate = @import("gio/unix_fd_list_private.zig").UnixFDListPrivate;
pub const UnixFDMessage = @import("gio/unix_fd_message.zig").UnixFDMessage;
pub const UnixFDMessageClass = @import("gio/unix_fd_message_class.zig").UnixFDMessageClass;
pub const UnixFDMessagePrivate = @import("gio/unix_fd_message_private.zig").UnixFDMessagePrivate;
pub const UnixInputStream = @import("gio/unix_input_stream.zig").UnixInputStream;
pub const UnixInputStreamClass = @import("gio/unix_input_stream_class.zig").UnixInputStreamClass;
pub const UnixInputStreamPrivate = @import("gio/unix_input_stream_private.zig").UnixInputStreamPrivate;
pub const UnixMountEntry = @import("gio/unix_mount_entry.zig").UnixMountEntry;
pub const UnixMountMonitor = @import("gio/unix_mount_monitor.zig").UnixMountMonitor;
pub const UnixMountMonitorClass = @import("gio/unix_mount_monitor_class.zig").UnixMountMonitorClass;
pub const UnixMountPoint = @import("gio/unix_mount_point.zig").UnixMountPoint;
pub const UnixOutputStream = @import("gio/unix_output_stream.zig").UnixOutputStream;
pub const UnixOutputStreamClass = @import("gio/unix_output_stream_class.zig").UnixOutputStreamClass;
pub const UnixOutputStreamPrivate = @import("gio/unix_output_stream_private.zig").UnixOutputStreamPrivate;
pub const UnixSocketAddress = @import("gio/unix_socket_address.zig").UnixSocketAddress;
pub const UnixSocketAddressClass = @import("gio/unix_socket_address_class.zig").UnixSocketAddressClass;
pub const UnixSocketAddressPrivate = @import("gio/unix_socket_address_private.zig").UnixSocketAddressPrivate;
pub const Vfs = @import("gio/vfs.zig").Vfs;
pub const VfsClass = @import("gio/vfs_class.zig").VfsClass;
pub const Volume = @import("gio/volume.zig").Volume;
pub const VolumeIface = @import("gio/volume_iface.zig").VolumeIface;
pub const VolumeMonitor = @import("gio/volume_monitor.zig").VolumeMonitor;
pub const VolumeMonitorClass = @import("gio/volume_monitor_class.zig").VolumeMonitorClass;
pub const ZlibCompressor = @import("gio/zlib_compressor.zig").ZlibCompressor;
pub const ZlibCompressorClass = @import("gio/zlib_compressor_class.zig").ZlibCompressorClass;
pub const ZlibDecompressor = @import("gio/zlib_decompressor.zig").ZlibDecompressor;
pub const ZlibDecompressorClass = @import("gio/zlib_decompressor_class.zig").ZlibDecompressorClass;

test {
    std.testing.refAllDecls(@This());
}